@*@using RunChallenge.MVC.Areas.Forum.Models
@model ArticleInputModel*@

@{
    ViewBag.Title = "Insert Article";
}
<div class="jumbotron">   
    @Html.Partial("_ArticleBinding")
</div>

@*@using (Html.BeginForm("InsertArticle", "Article", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div>
        @Html.LabelFor(m => m.Title)
    </div>
    <div>
        @Html.TextBoxFor(m => m.Title)
        <label class="alert-warning">
            @Html.ValidationMessageFor(m => m.Title)
        </label>
    </div>

    <div>
        @Html.LabelFor(m => m.Content)
    </div>
    <div>
        @Html.TextAreaFor(m => m.Content)
        <label class="alert-warning">
            @Html.ValidationMessageFor(m => m.Content)
        </label>
    </div>
    <div>
        @Html.LabelFor(m => m.Category)
    </div>
    <div>
        @Html.DropDownListFor(model => model.Category, Enum.GetNames(typeof(RunChallenge.Models.ArticleCategory)).Select(e => new SelectListItem { Text = e }))
        @Html.DropDownListFor(m => m.Category, Enumerable.Range(0, Model.Category.Count).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString(), Selected = (x == 1) }))
        <label class="alert-warning">
            @Html.ValidationMessageFor(m => m.Category)
        </label>
    </div>
    <div>
            @Html.LabelFor(m => m.Meters)
        </div>
        <div>
            @Html.TextBoxFor(m => m.Meters, new { Value = 0 })
            <label class="alert-warning">
                @Html.ValidationMessageFor(m => m.Meters)
            </label>
        </div>
        <div>
            @Html.LabelFor(m => m.Hours)
        </div>
        <div>
            @Html.DropDownListFor(m => m.Hours, Enumerable.Range(0, 24).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString(), Selected = (x == 0) }))
            <label class="alert-warning">
                @Html.ValidationMessageFor(m => m.Hours)
            </label>
        </div>
        <div>
            @Html.LabelFor(m => m.Minutes)
        </div>
        <div>
            @Html.DropDownListFor(m => m.Minutes, Enumerable.Range(0, 60).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString(), Selected = (x == 30) }))
            <label class="alert-warning">
                @Html.ValidationMessageFor(m => m.Minutes)
            </label>
        </div>
        <div>
            @Html.LabelFor(m => m.Seconds)
        </div>
        <div>
            @Html.DropDownListFor(m => m.Seconds, Enumerable.Range(0, 60).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString(), Selected = (x == 0) }))
            <label class="alert-warning">
                @Html.ValidationMessageFor(m => m.Seconds)
            </label>
        </div>
        <div>
            @Html.LabelFor(m => m.Location)
        </div>
        <div>
            @Html.TextBoxFor(m => m.Location, new { Value = "Plovdiv" })
            <label class="alert-warning">
                @Html.ValidationMessageFor(m => m.Location)
            </label>
        </div>
        <div>
            @Html.LabelFor(m => m.Comment)
        </div>
        <div>
            @Html.TextBoxFor(m => m.Comment, new { Value = "It's cold outside!" })
            <label class="alert-warning">
                @Html.ValidationMessageFor(m => m.Comment)
            </label>
        </div>
    
    <input type="checkbox" name="check" checked="checked" value="true" />
    <input type="hidden" name="check" value="false" />
    
    @Html.Submit("Save")
    if (@TempData["Success"] != null)
    {
        <span class="alert-success custom-message">
            @TempData["Success"]
        </span>
    }
}*@


