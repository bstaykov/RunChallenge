@model RunChallenge.MVC.Models.Workouts.WorkoutInputModel

@using (Html.BeginForm("InsertWorkout", "Workout", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    // excludes properties errors
    @Html.ValidationSummary(true)


    <div class="row">
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Km)
            </div>
            <div class="col-md-2 ">
                @Html.EditorFor(m => m.Km)
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Km)
            </div>
        </div>
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Meters)
            </div>
            <div class="col-md-2">
                @Html.EditorFor(m => m.Meters)
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Meters)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Hours)
            </div>
            <div class="col-md-2 pull-left">
                @Html.DropDownListFor(m => m.Hours, Enumerable.Range(0, 24).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString(), Selected = (x == 0) }))
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Hours)
            </div>
        </div>
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Minutes)
            </div>
            <div class="col-md-2 pull-left">
                @Html.DropDownListFor(m => m.Minutes, Enumerable.Range(0, 60).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString(), Selected = (x == 30) }))
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Minutes)
            </div>
        </div>
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Seconds)
            </div>
            <div class="col-md-2 pull-left">
                @Html.DropDownListFor(m => m.Seconds, Enumerable.Range(0, 60).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString(), Selected = (x == 0) }))
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Seconds)
            </div>
        </div>
    </div>

    var date = DateTime.Now;
    var year = date.Year;
    var month = date.Month;
    var day = date.Day;

    <div class="row">
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Year)
            </div>
            <div class="col-md-2 pull-left">
                @Html.DropDownListFor(m => m.Year, Enumerable.Range(year - 1, 2).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString() }))
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Year)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Month)
            </div>
            <div class="col-md-2 pull-left">
                @Html.DropDownListFor(m => m.Month, Enumerable.Range(1, 12).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString() }))
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Month)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Day)
            </div>
            <div class="col-md-2 pull-left">
                @Html.DropDownListFor(m => m.Day, Enumerable.Range(1, 31).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString() }))
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Day)
                @if (TempData["ErrorDateTime"] != null)
                {
                    @TempData["ErrorDateTime"]
                }
            </div>
        </div>
    </div>

    <div class="row">
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Location)
            </div>
            <div class="col-md-2 pull-left">
                @Html.EditorFor(m => m.Location)
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Location)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Comment)
            </div>
            <div class="col-md-2 pull-left">
                @Html.EditorFor(m => m.Comment)
            </div>
            <div class="alert-warning col-md-4">
                @Html.ValidationMessageFor(m => m.Comment)
            </div>
        </div>
    </div>
    <div class="row">
        @Html.Submit("Save", new { @class = "btn" })
    </div>
}

@* CLIENT VALIDATION *@
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<hr />
